{
  "C:\\coach_genai\\bodybuilding_serverless_api\\serverless.yml": {
    "versionFramework": "4.9.0",
    "servicePath": "C:\\coach_genai\\bodybuilding_serverless_api\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "bodybuildr-backend-infrastructure",
      "provider": {
        "name": "aws",
        "runtime": "python3.12",
        "stage": "dev",
        "region": "us-east-1",
        "tags": {
          "Environment": "dev",
          "Project": "bodybuildr"
        },
        "memorySize": 256,
        "timeout": 68,
        "apiGateway": {
          "binaryMediaTypes": [
            "image/png",
            "image/jpeg",
            "application/xlsx",
            "multipart/form-data"
          ],
          "minimumCompressionSize": 1024,
          "metrics": true,
          "timeoutInMillis": 69000
        },
        "environment": {
          "FILES_BUCKET": "bodybuildr-files-dev",
          "PLANS_TABLE": "bodybuildr-plans-table-dev",
          "PLAN_VERSIONS_TABLE": "bodybuildr-planversions-dev",
          "USERS_TABLE": "bodybuildr-users-table-dev",
          "COGNITO": "cognito-dev",
          "CHAT_HISTORY_TABLE": "bodybuildr-chat-history-dev",
          "PROGRESS_TABLE": "bodybuildr-progress-dev",
          "STAGE": "dev"
        },
        "iam": {
          "role": {
            "name": "bodybuildr-backend-infrastructure-dev-lambda-role",
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:*"
                ],
                "Resource": "arn:aws:dynamodb:*:*:*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:*"
                ],
                "Resource": [
                  "arn:aws:s3:::bodybuildr-files-dev",
                  "arn:aws:s3:::bodybuildr-files-dev/*"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "secretsmanager:GetSecretValue"
                ],
                "Resource": "arn:aws:secretsmanager:us-east-1:*:secret:cognito-dev*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "bedrock:*"
                ],
                "Resource": "arn:aws:bedrock:*:*:*"
              }
            ]
          }
        },
        "versionFunctions": true
      },
      "custom": {
        "stages": [
          "dev",
          "prod"
        ],
        "binaryMediaTypes": [
          "image/png",
          "image/jpeg",
          "application/xlsx",
          "multipart/form-data"
        ],
        "resourceNames": {
          "filesBucket": "bodybuildr-files-dev",
          "plansTable": "bodybuildr-plans-table-dev",
          "usersTable": "bodybuildr-users-table-dev",
          "filesTable": "bodybuildr-files-table-dev",
          "cognitoSecret": "<REDACTED>",
          "planVersionsTable": "bodybuildr-planversions-dev",
          "chatHistoryTable": "bodybuildr-chat-history-dev",
          "progressTable": "bodybuildr-progress-dev"
        },
        "environment": {
          "FILES_BUCKET": "bodybuildr-files-dev",
          "PLANS_TABLE": "bodybuildr-plans-table-dev",
          "PLAN_VERSIONS_TABLE": "bodybuildr-planversions-dev",
          "USERS_TABLE": "bodybuildr-users-table-dev",
          "COGNITO": "cognito-dev",
          "CHAT_HISTORY_TABLE": "bodybuildr-chat-history-dev",
          "PROGRESS_TABLE": "bodybuildr-progress-dev",
          "STAGE": "dev"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "dynamodb:*"
            ],
            "Resource": [
              "arn:aws:dynamodb:*:*:*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "s3:*"
            ],
            "Resource": [
              "arn:aws:s3:::bodybuildr-files-dev",
              "arn:aws:s3:::bodybuildr-files-dev/*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "secretsmanager:GetSecretValue"
            ],
            "Resource": [
              "arn:aws:secretsmanager:us-east-1:*:secret:cognito-dev*"
            ]
          },
          {
            "Effect": "Allow",
            "Action": [
              "bedrock:*"
            ],
            "Resource": [
              "arn:aws:bedrock:*:*:*"
            ]
          }
        ],
        "pythonRequirements": {
          "dockerizePip": false,
          "requirementsFile": "requirements.txt",
          "noDeploy": [
            "boto3",
            "botocore",
            "docutils",
            "jmespath",
            "python-dateutil",
            "s3transfer",
            "six",
            "pip",
            "setuptools"
          ],
          "patterns": [
            "**/__pycache__/**",
            "**/*.pyc",
            "**/*.pyo",
            "**/*.pyd",
            "**/.Python",
            "**/.env",
            "**/.venv",
            "**/env/",
            "**/venv/",
            "**/.eggs/",
            "**/.tox/",
            "**/.coverage",
            "**/.pytest_cache/",
            "**/.mypy_cache/"
          ]
        }
      },
      "functions": {
        "authorize": {
          "handler": "src/handlers/auth_handler.authorizer",
          "timeout": 5,
          "memorySize": 128,
          "events": [],
          "name": "bodybuildr-backend-infrastructure-dev-authorize"
        },
        "createPlan": {
          "handler": "src/handlers/plan_handler.create_plan",
          "timeout": 65,
          "events": [
            {
              "http": {
                "path": "/plans/create",
                "method": "post",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-createPlan"
        },
        "savePlan": {
          "handler": "src/handlers/plan_handler.save_plan",
          "events": [
            {
              "http": {
                "path": "/plans/save",
                "method": "post",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-savePlan"
        },
        "listPlans": {
          "handler": "src/handlers/plan_handler.list_plans",
          "events": [
            {
              "http": {
                "path": "/plans/list",
                "method": "get",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-listPlans"
        },
        "createUser": {
          "handler": "src/handlers/user_handler.create_user",
          "events": [
            {
              "http": {
                "path": "/users/create",
                "method": "post",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-createUser"
        },
        "updateUser": {
          "handler": "src/handlers/user_handler.update_user",
          "events": [
            {
              "http": {
                "path": "/users/{userId}",
                "method": "put",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-updateUser"
        },
        "getUser": {
          "handler": "src/handlers/user_handler.get_user",
          "events": [
            {
              "http": {
                "path": "/users/{userId}",
                "method": "get",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-getUser"
        },
        "updateProgress": {
          "handler": "src/handlers/progress_handler.update_progress",
          "events": [
            {
              "http": {
                "path": "/progress/{userId}",
                "method": "post",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-updateProgress"
        },
        "getProgress": {
          "handler": "src/handlers/progress_handler.get_progress",
          "events": [
            {
              "http": {
                "path": "/progress/{userId}",
                "method": "get",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-getProgress"
        },
        "getPlanVersions": {
          "handler": "src/handlers/plan_handler.get_plan_versions",
          "events": [
            {
              "http": {
                "path": "/plans/versions/{planId}",
                "method": "get",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-getPlanVersions"
        },
        "chatWithCoach": {
          "handler": "src/handlers/chat_handler.chat_with_coach",
          "timeout": 65,
          "events": [
            {
              "http": {
                "path": "/plans/chat",
                "method": "post",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-chatWithCoach"
        },
        "getChatHistory": {
          "handler": "src/handlers/chat_handler.get_chat_history",
          "events": [
            {
              "http": {
                "path": "/plans/{planId}/chat-history",
                "method": "get",
                "cors": {
                  "origins": [
                    "*"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "authorizer": {
                  "name": "authorize",
                  "type": "token",
                  "identitySource": "method.request.header.Authorization"
                }
              }
            }
          ],
          "name": "bodybuildr-backend-infrastructure-dev-getChatHistory"
        }
      },
      "plugins": [
        "serverless-python-requirements",
        "serverless-prune-plugin"
      ],
      "resources": {
        "Resources": {
          "FileBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "bodybuildr-files-dev",
              "VersioningConfiguration": {
                "Status": "Enabled"
              },
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "FilesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bodybuildr-files-table-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "filepath",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "filepath",
                  "KeyType": "RANGE"
                }
              ],
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              }
            }
          },
          "PlansTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bodybuildr-plans-table-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "planId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "planId",
                  "KeyType": "RANGE"
                }
              ],
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              }
            }
          },
          "PlanVersionsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bodybuildr-planversions-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "planId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "version",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "planId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "version",
                  "KeyType": "RANGE"
                }
              ],
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              }
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bodybuildr-users-table-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                }
              ],
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              }
            }
          },
          "ProgressTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bodybuildr-progress-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "date",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "date",
                  "KeyType": "RANGE"
                }
              ],
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              }
            }
          },
          "ChatHistoryTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "bodybuildr-chat-history-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "userId_planId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "timestamp",
                  "AttributeType": "N"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId_planId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "PointInTimeRecoverySpecification": {
                "PointInTimeRecoveryEnabled": true
              }
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "stage": "dev",
      "region": "us-east-1",
      "tags": {
        "Environment": "dev",
        "Project": "bodybuildr"
      },
      "memorySize": 256,
      "timeout": 68,
      "apiGateway": {
        "binaryMediaTypes": [
          "image/png",
          "image/jpeg",
          "application/xlsx",
          "multipart/form-data"
        ],
        "minimumCompressionSize": 1024,
        "metrics": true,
        "timeoutInMillis": 69000
      },
      "environment": {
        "FILES_BUCKET": "bodybuildr-files-dev",
        "PLANS_TABLE": "bodybuildr-plans-table-dev",
        "PLAN_VERSIONS_TABLE": "bodybuildr-planversions-dev",
        "USERS_TABLE": "bodybuildr-users-table-dev",
        "COGNITO": "cognito-dev",
        "CHAT_HISTORY_TABLE": "bodybuildr-chat-history-dev",
        "PROGRESS_TABLE": "bodybuildr-progress-dev",
        "STAGE": "dev"
      },
      "iam": {
        "role": {
          "name": "bodybuildr-backend-infrastructure-dev-lambda-role",
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:*"
              ],
              "Resource": "arn:aws:dynamodb:*:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": [
                "arn:aws:s3:::bodybuildr-files-dev",
                "arn:aws:s3:::bodybuildr-files-dev/*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "secretsmanager:GetSecretValue"
              ],
              "Resource": "arn:aws:secretsmanager:us-east-1:*:secret:cognito-dev*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "bedrock:*"
              ],
              "Resource": "arn:aws:bedrock:*:*:*"
            }
          ]
        }
      },
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "# org: bodybuildr\r\nservice: bodybuildr-backend-infrastructure\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.12\r\n  stage: ${file(config.${opt:stage, 'dev'}.json):stage}\r\n  region: ${file(config.${opt:stage, 'dev'}.json):region, 'us-east-1'}\r\n  tags:\r\n    Environment: ${self:provider.stage}\r\n    Project: bodybuildr\r\n    \r\n  memorySize: 256\r\n  timeout: 68\r\n  apiGateway:\r\n    binaryMediaTypes: ${self:custom.binaryMediaTypes}\r\n    minimumCompressionSize: 1024\r\n    metrics: true\r\n    timeoutInMillis: 69000\r\n\r\n  environment: ${self:custom.environment}\r\n  \r\n  iam:\r\n    role:\r\n      name: ${self:service}-${self:provider.stage}-lambda-role\r\n      statements: ${self:custom.iamRoleStatements}\r\n\r\ncustom:\r\n  stages:\r\n    - dev\r\n    - prod\r\n    \r\n  binaryMediaTypes:\r\n    - 'image/png'\r\n    - 'image/jpeg'\r\n    - 'application/xlsx'\r\n    - 'multipart/form-data'\r\n    \r\n  resourceNames:\r\n    filesBucket: 'bodybuildr-files-${self:provider.stage}'\r\n    plansTable: 'bodybuildr-plans-table-${self:provider.stage}'\r\n    usersTable: 'bodybuildr-users-table-${self:provider.stage}'\r\n    filesTable: 'bodybuildr-files-table-${self:provider.stage}'\r\n    cognitoSecret: 'cognito-${self:provider.stage}'\r\n    planVersionsTable: 'bodybuildr-planversions-${self:provider.stage}'\r\n    chatHistoryTable: 'bodybuildr-chat-history-${self:provider.stage}'\r\n    progressTable: 'bodybuildr-progress-${self:provider.stage}'\r\n\r\n  environment:\r\n    FILES_BUCKET: ${self:custom.resourceNames.filesBucket}\r\n    PLANS_TABLE: ${self:custom.resourceNames.plansTable}\r\n    PLAN_VERSIONS_TABLE: ${self:custom.resourceNames.planVersionsTable}\r\n    USERS_TABLE: ${self:custom.resourceNames.usersTable}\r\n    COGNITO: ${self:custom.resourceNames.cognitoSecret}\r\n    CHAT_HISTORY_TABLE: ${self:custom.resourceNames.chatHistoryTable}\r\n    PROGRESS_TABLE: ${self:custom.resourceNames.progressTable}\r\n    STAGE: ${self:provider.stage}\r\n\r\n  iamRoleStatements:\r\n    - Effect: Allow\r\n      Action:\r\n        - dynamodb:*\r\n      Resource:\r\n        - arn:aws:dynamodb:*:*:*\r\n    - Effect: Allow\r\n      Action:\r\n        - s3:*\r\n      Resource: \r\n        - arn:aws:s3:::${self:custom.resourceNames.filesBucket}\r\n        - arn:aws:s3:::${self:custom.resourceNames.filesBucket}/*\r\n    - Effect: Allow\r\n      Action:\r\n        - secretsmanager:GetSecretValue\r\n      Resource: \r\n        - arn:aws:secretsmanager:${self:provider.region}:*:secret:${self:custom.resourceNames.cognitoSecret}*\r\n    - Effect: Allow\r\n      Action:\r\n        - bedrock:*\r\n      Resource: \r\n        - arn:aws:bedrock:*:*:*\r\n\r\n  pythonRequirements:\r\n    dockerizePip: false\r\n    requirementsFile: requirements.txt\r\n    noDeploy: ${file(excludes/python-packages.json):noDeploy}\r\n    patterns: ${file(excludes/python-patterns.json):patterns}\r\n\r\nfunctions:\r\n  authorize:\r\n    handler: src/handlers/auth_handler.authorizer\r\n    timeout: 5\r\n    memorySize: 128\r\n\r\n  # Workout Plan Management\r\n  createPlan:\r\n    handler: src/handlers/plan_handler.create_plan\r\n    timeout: 65\r\n    events:\r\n      - http:\r\n          path: /plans/create\r\n          method: post\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  savePlan:\r\n    handler: src/handlers/plan_handler.save_plan\r\n    events:\r\n      - http:\r\n          path: /plans/save\r\n          method: post\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  listPlans:\r\n    handler: src/handlers/plan_handler.list_plans\r\n    events:\r\n      - http:\r\n          path: /plans/list\r\n          method: get\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  # User Profile Management\r\n  createUser:\r\n    handler: src/handlers/user_handler.create_user\r\n    events:\r\n      - http:\r\n          path: /users/create\r\n          method: post\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  updateUser:\r\n    handler: src/handlers/user_handler.update_user\r\n    events:\r\n      - http:\r\n          path: /users/{userId}\r\n          method: put\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  getUser:\r\n    handler: src/handlers/user_handler.get_user\r\n    events:\r\n      - http:\r\n          path: /users/{userId}\r\n          method: get\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  # Progress Tracking\r\n  updateProgress:\r\n    handler: src/handlers/progress_handler.update_progress\r\n    events:\r\n      - http:\r\n          path: /progress/{userId}\r\n          method: post\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  getProgress:\r\n    handler: src/handlers/progress_handler.get_progress\r\n    events:\r\n      - http:\r\n          path: /progress/{userId}\r\n          method: get\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  # Plan Versioning and Chat\r\n  getPlanVersions:\r\n    handler: src/handlers/plan_handler.get_plan_versions\r\n    events:\r\n      - http:\r\n          path: /plans/versions/{planId}\r\n          method: get\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  chatWithCoach:\r\n    handler: src/handlers/chat_handler.chat_with_coach\r\n    timeout: 65\r\n    events:\r\n      - http:\r\n          path: /plans/chat\r\n          method: post\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\n  getChatHistory:\r\n    handler: src/handlers/chat_handler.get_chat_history\r\n    events:\r\n      - http:\r\n          path: /plans/{planId}/chat-history\r\n          method: get\r\n          cors: ${file(api-config.json):cors}\r\n          authorizer: ${file(api-config.json):authorizer}\r\n\r\nplugins:\r\n  - serverless-python-requirements\r\n  - serverless-prune-plugin\r\n\r\nresources:\r\n  Resources:\r\n    FileBucket:\r\n      Type: AWS::S3::Bucket\r\n      Properties:\r\n        BucketName: ${self:custom.resourceNames.filesBucket}\r\n        VersioningConfiguration:\r\n          Status: Enabled\r\n        BucketEncryption:\r\n          ServerSideEncryptionConfiguration:\r\n            - ServerSideEncryptionByDefault:\r\n                SSEAlgorithm: AES256\r\n\r\n    FilesTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.resourceNames.filesTable}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n          - AttributeName: filepath\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n          - AttributeName: filepath\r\n            KeyType: RANGE\r\n        PointInTimeRecoverySpecification:\r\n          PointInTimeRecoveryEnabled: true\r\n\r\n    PlansTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.resourceNames.plansTable}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n          - AttributeName: planId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n          - AttributeName: planId\r\n            KeyType: RANGE\r\n        PointInTimeRecoverySpecification:\r\n          PointInTimeRecoveryEnabled: true\r\n\r\n    PlanVersionsTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.resourceNames.planVersionsTable}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: planId\r\n            AttributeType: S\r\n          - AttributeName: version\r\n            AttributeType: N\r\n        KeySchema:\r\n          - AttributeName: planId\r\n            KeyType: HASH\r\n          - AttributeName: version\r\n            KeyType: RANGE\r\n        PointInTimeRecoverySpecification:\r\n          PointInTimeRecoveryEnabled: true\r\n\r\n    UsersTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.resourceNames.usersTable}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n        PointInTimeRecoverySpecification:\r\n          PointInTimeRecoveryEnabled: true\r\n\r\n    ProgressTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.resourceNames.progressTable}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId\r\n            AttributeType: S\r\n          - AttributeName: date\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: userId\r\n            KeyType: HASH\r\n          - AttributeName: date\r\n            KeyType: RANGE\r\n        PointInTimeRecoverySpecification:\r\n          PointInTimeRecoveryEnabled: true\r\n\r\n    ChatHistoryTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: ${self:custom.resourceNames.chatHistoryTable}\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: userId_planId\r\n            AttributeType: S\r\n          - AttributeName: timestamp\r\n            AttributeType: N\r\n        KeySchema:\r\n          - AttributeName: userId_planId\r\n            KeyType: HASH\r\n          - AttributeName: timestamp\r\n            KeyType: RANGE\r\n        PointInTimeRecoverySpecification:\r\n          PointInTimeRecoveryEnabled: true ",
    "command": [
      "info"
    ],
    "options": {
      "stage": "dev"
    },
    "orgId": "5d88b43e-a091-468a-81a3-59c0174661e8",
    "orgName": "mathtilda",
    "userId": "RLw2P1bF2f5j0ZJjb1",
    "userName": "mathtilda",
    "serviceProviderAwsAccountId": "911167915455",
    "serviceProviderAwsCfStackName": "bodybuildr-backend-infrastructure-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:911167915455:stack/bodybuildr-backend-infrastructure-dev/f7eef670-01a5-11f0-b5c2-0afff3df4c43",
    "serviceProviderAwsCfStackCreated": "2025-03-15T14:01:19.075Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreatePlanLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-createPlan:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-CreatePlanLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateProgressLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-updateProgress:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-UpdateProgressLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "AuthorizeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-authorize:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-AuthorizeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-updateUser:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-UpdateUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ChatWithCoachLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-chatWithCoach:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-ChatWithCoachLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ListPlansLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-listPlans:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-ListPlansLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-getUser:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-GetUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetProgressLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-getProgress:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-GetProgressLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetPlanVersionsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-getPlanVersions:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-GetPlanVersionsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-cfd30ff4-8aeb",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "GetChatHistoryLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-getChatHistory:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-GetChatHistoryLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateUserLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-createUser:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-CreateUserLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://a0h7704tzj.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "SavePlanLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:911167915455:function:bodybuildr-backend-infrastructure-dev-savePlan:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-bodybuildr-backend-infrastructure-dev-SavePlanLambdaFunctionQualifiedArn"
      }
    ]
  }
}